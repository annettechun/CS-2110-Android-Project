package com.example.androidproject;

import java.util.ArrayList;

import com.example.androidproject.Ghost;
import com.example.androidproject.R;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.View;

public class AddingGhost extends View {
	Bitmap bitmap;
	// red and blue ghosts
	int a, b, c, d, e, f, g, h, i, j, k;
	// coins
	int l, m, n, o, q, r;
	// bomb
	int s, t, u;
	Ghost rg1;
	Ghost bg1;
	Ghost coin3;
	Ghost coin5;
	Ghost bomb;
	static ArrayList<Ghost> redGhostList;
	static ArrayList<Ghost> blueGhostList;
	static ArrayList<Ghost> coinThreeList;
	static ArrayList<Ghost> coinFiveList;
	static ArrayList<Ghost> bombList;

	public AddingGhost(Context context) {
		super(context);
		init();
	}

	public AddingGhost(Context context, AttributeSet attrs) {
		super(context, attrs);
		init();
	}

	public AddingGhost(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		init();
	}

	private void init() {

		redGhostList = new ArrayList<Ghost>();
		for (int i = 0; i < 2; ++i) {
			Ghost rg1 = new Ghost(0, 0, true, BitmapFactory.decodeResource(
					getResources(), R.drawable.ghost1));
			redGhostList.add(rg1);
		}

		blueGhostList = new ArrayList<Ghost>();
		for (int i = 0; i < 4; ++i) {
			Ghost bg1 = new Ghost(0, 0, false, BitmapFactory.decodeResource(
					getResources(), R.drawable.blueghost));
			blueGhostList.add(bg1);
		}

		// coinThreeList = new ArrayList<Ghost>();
		// for (int i = 0; i < 1; ++i) {
		// Ghost coin3 = new Ghost(0, 0, false, BitmapFactory.decodeResource(
		// getResources(), R.drawable.threecoin));
		// coinThreeList.add(coin3);
		// }

		coinFiveList = new ArrayList<Ghost>();
		bombList = new ArrayList<Ghost>();
	}

	@Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);
		Paint p = new Paint();
		// red ghosts!
		for (Ghost g2 : redGhostList) {

			if (a == 800) {
				g2.setY(0);
				g2.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
				a = -100;
				c = 2;
			}

			else if (g2.getY() > canvas.getHeight()) {
				g2.setY(0);
				g2.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			else {
				g2.setY(g2.getY() + 10);
			}

			if (c == 0) {
				g2.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
				b = g2.getX();
				c = 1;
			}

			if (c == 1) {
				g2.setX(b);
			}

			else if (g2.getX() == 0) {
				g2.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			if (a != -100) {
				a = g2.getY();
			}

			canvas.drawBitmap(g2.getBitmap(), g2.getX(), g2.getY(), p);

			// first blue ghost
			if (a == 270 && d == 0) {
				blueGhostList.get(0).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
				blueGhostList.get(0).setY(0);
				d = 1;
				e = blueGhostList.get(0).getX();
			}

			if (d == 1 && a != 0) {
				blueGhostList.get(0).setY(blueGhostList.get(0).getY() + 10);
				blueGhostList.get(0).setX(e);
			}

			// second time around
			else if (d == 1 && a == 0) {
				d = 2;
			}

			if (d == 2 && blueGhostList.get(0).getY() > canvas.getHeight()) {
				blueGhostList.get(0).setY(0);
				blueGhostList.get(0).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			else if (d == 2) {
				blueGhostList.get(0).setY(blueGhostList.get(0).getY() + 10);
			}

			if (d == 2 && blueGhostList.get(0).getY() == 0) {
				blueGhostList.get(0).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			if (d == 1 || d == 2) {
				canvas.drawBitmap(blueGhostList.get(0).getBitmap(),
						blueGhostList.get(0).getX(), blueGhostList.get(0)
								.getY(), p);
			}

			// second blue ghost
			if (a == 550 && f == 0) {
				blueGhostList.get(1).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
				blueGhostList.get(1).setY(0);
				f = 1;
				g = blueGhostList.get(1).getX();
			}

			if (f == 1 && a != 0) {
				blueGhostList.get(1).setY(blueGhostList.get(1).getY() + 10);
				blueGhostList.get(1).setX(g);
			}

			// second time around
			else if (f == 1 && a == 0) {
				f = 2;
			}

			if (f == 2 && blueGhostList.get(1).getY() > canvas.getHeight()) {
				blueGhostList.get(1).setY(0);
				blueGhostList.get(1).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			else if (f == 2) {
				blueGhostList.get(1).setY(blueGhostList.get(1).getY() + 10);
			}

			if (f == 2 && blueGhostList.get(1).getY() == 0) {
				blueGhostList.get(1).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			if (f == 1 || f == 2) {
				canvas.drawBitmap(blueGhostList.get(1).getBitmap(),
						blueGhostList.get(1).getX(), blueGhostList.get(1)
								.getY(), p);
			}

			// third blue ghost
			if (a == 1070 && h == 0) {
				blueGhostList.get(2).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
				blueGhostList.get(2).setY(0);
				h = 1;
				i = blueGhostList.get(2).getX();
			}

			if (h == 1 && a >= canvas.getHeight()) {
				h = 2;
			} else if (h == 1) {
				blueGhostList.get(2).setY(blueGhostList.get(2).getY() + 10);
				blueGhostList.get(2).setX(i);
			}

			// second time around
			if (h == 2 && blueGhostList.get(2).getY() > canvas.getHeight()) {
				blueGhostList.get(2).setY(0);
				blueGhostList.get(2).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			else if (h == 2) {
				blueGhostList.get(2).setY(blueGhostList.get(2).getY() + 10);
			}

			if (h == 2 && blueGhostList.get(2).getY() == 0) {
				blueGhostList.get(2).setX(
						(int) (Math.random() * (canvas.getWidth() - 180) + 1));
			}

			if (h == 1 || h == 2) {
				canvas.drawBitmap(blueGhostList.get(2).getBitmap(),
						blueGhostList.get(2).getX(), blueGhostList.get(2)
								.getY(), p);
			}

			/*
			 * // fourth blue ghost if (a >= canvas.getHeight() - 20 && a <
			 * canvas.getHeight() && j == 0) { blueGhostList.get(3).setX( (int)
			 * (Math.random() * (canvas.getWidth() - 180) + 1));
			 * blueGhostList.get(3).setY(0); j = 1; k =
			 * blueGhostList.get(3).getX(); }
			 * 
			 * if (j == 1 && a >= canvas.getHeight()) { j = 2; } else if (j ==
			 * 1) { blueGhostList.get(3).setY(blueGhostList.get(3).getY() + 10);
			 * blueGhostList.get(3).setX(k); }
			 * 
			 * // second time around if (j == 2 && blueGhostList.get(3).getY() >
			 * canvas.getHeight()) { blueGhostList.get(3).setY(0);
			 * blueGhostList.get(3).setX( (int) (Math.random() *
			 * (canvas.getWidth() - 180) + 1)); }
			 * 
			 * else if (j == 2) {
			 * blueGhostList.get(3).setY(blueGhostList.get(3).getY() + 10); }
			 * 
			 * if (j == 2 && blueGhostList.get(3).getY() == 0) {
			 * blueGhostList.get(3).setX( (int) (Math.random() *
			 * (canvas.getWidth() - 180) + 1)); }
			 * 
			 * if (j == 1 || j == 2) {
			 * canvas.drawBitmap(blueGhostList.get(3).getBitmap(),
			 * blueGhostList.get(3).getX(), blueGhostList.get(3) .getY(), p); }
			 */

			// for (Ghost c3 : coinThreeList) {
			// if (l == 400) {
			// c3.setY(0);
			// c3.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
			// l = -100;
			// n = 2;
			// }
			//
			//
			// else {
			// c3.setY(c3.getY() + 5);
			// }
			//
			// if (n == 0) {
			// c3.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
			// m = c3.getX();
			// n = 1;
			// }
			//
			// if (n == 1) {
			// c3.setX(m);
			// }
			//
			// else if (c3.getX() == 0) {
			// c3.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
			// }
			//
			// if (l != -100) {
			// l = c3.getY();
			// }
			//
			// canvas.drawBitmap(c3.getBitmap(), c3.getX(), c3.getY(), p);

			for (Ghost c5 : coinFiveList) {

				// int count = 0;

				// o,q,r

				if (c5.getX() == 0) {
					c5.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
				}

				c5.setY(c5.getY() + 5);

				canvas.drawBitmap(c5.getBitmap(), c5.getX(), c5.getY(), p);

			}

			for (Ghost bomb : bombList) {

				// int count = 0;

				if (bomb.getX() == 0) {
					bomb.setX((int) (Math.random() * (canvas.getWidth() - 180) + 1));
				}

				bomb.setY(bomb.getY() + 10);
				
				canvas.drawBitmap(bomb.getBitmap(), bomb.getX(), bomb.getY(), p);

			}

			invalidate(); // makes it keep going
		}
	}
}
